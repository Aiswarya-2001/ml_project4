
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1  

      - name: Build, tag, and push image to ECR
        run: |
          IMAGE_TAG=043319837845.dkr.ecr.us-east-1.amazonaws.com/studentperformance:latest
          docker build -t $IMAGE_TAG -f Dockerfile .
          docker push $IMAGE_TAG

  deploy:
    name: Continuous Deployment
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Ensure unzip is installed
        run: |
          if ! command -v unzip &> /dev/null; then
            echo "unzip not found. Installing..."
            sudo apt-get update
            sudo apt-get install -y unzip
          else
            echo "unzip already installed."
          fi

      - name: Ensure AWS CLI is installed
        run: |
          if ! command -v aws &> /dev/null; then
            echo "AWS CLI not found. Installing..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          else
            echo "AWS CLI already installed."
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to EC2
        run: |
          echo "Logging in to Amazon ECR..."
          ECR_REGISTRY="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com"
          ECR_REPOSITORY="studentperformance"
          ECR_URI="$ECR_REGISTRY/$ECR_REPOSITORY"

          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin $ECR_REGISTRY

          echo "Cleaning old containers and images..."
          docker stop myapp || true
          docker rm myapp || true
          docker system prune -af || true

          echo "Pulling latest Docker image..."
          docker pull $ECR_URI:latest

          echo "Running container..."
          docker run -d --name myapp -p 8080:8080 $ECR_URI:latest
